> = terminal command
* = action
- = desribe

1. Tell about git
  - Git is a version control system.
  - Used for tracking changes in code files in sofrware development.
    But could be used for any files as well.
  - Created by Linus Torvalds
  - If you use hosted git (in a cloud) it is a backup tool also.

2. Tell about GitHub
  - GitHub is a web based Git repository hosting service
  - Free or paid plans available
  - I am using free version for school projects ==> Everything is public.
  * https://github.com => Show and describe the main page.

3. Create a git repository.
  - Repository stores your project files and history of changes to those files.
  - You can have one or multiple repositories for your project. For example:
    - 1 repository for iOS client project
    - 1 repository for Android client project
    - 1 repository for backend imeplementation (servers, databases, in a cloud)
  - You create your repositories to GitHub easily. (Main page => New
    repository).
  * Create repository for backend. (Describe what backend means).
    * Give a name reporter
    * Write a description
    * Tick README button. Tell audience about the README.md file.
  - To use git you must have git software installed to your
    development machine.
      - There are multiple git clients, some have graphical user interface
        but I'm using command line client.
        https://git-scm.com/downloads

4. Clone the repository
  - Clone the repository to your development machine. Currently there
    is only one file. The readme file.
  > git clone git@github.com-oamk-veikko:oamk-veikko/reporter-demo.git
  - Describe what we have just done.
  - Create a simple text file and push it to remote repository
  > cd reporter
  > atom test.txt
  - Write something to the file and save it.
  > ls
  > git status
  > git add --all
  > git status
  > git commit -m"Demo change will do this and that."
  > git push origin master
  - Show now the repository in the web browser. New file is there.
  - Show and describe the commit history. Open Pint Please repo!

5. Create node.js / Heroku skeleton to repo
  * Install node.js (Download packages from https://nodejs.org/en/)
  - Node.jsÂ® is a JavaScript runtime built on Chrome's JavaScript engine.
  - Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.
  - Node.js' package ecosystem, npm, is the largest ecosystem of open source libraries in the world.
  - We have installed npm client during the node.js installation
  * Open terminal, goto repo you created in the previous step
  > atom index.js
  * Write something to consle in the file like
    console.log("Hello class!");
  > node index.js
  - Let's install express component using npm
    - https://github.com/expressjs/express
    - Express is a minimalistic web-framework for node. It means that it will
      host web pages and apis for our demo today.
    > npm install express
    * open index.js again and modify it
      console.log("Hello class!");
      var express = require('express')
      var app = express()

      app.get('/', function (req, res) {
        res.send('<h1>Hello class</h1><p>Lorem ipsum blah</p>')
        })
      app.listen(3000)
    - OK, now we have installed node & express.
    - Next we have to select a cloud service provider where we want to run our
      solution. Currently everything is running in my pc.
    - We will use Heroku PAAS (platform as a service) for our service. It's free
      for non professional / critical (like we have here).
    - First we need to install Heroku tools to our pc:
      https://devcenter.heroku.com/articles/heroku-cli
    - Next we create a simple getting started project with node for Heroku.
      - We use Heroku's public git repo to download the code for it.
      > git clone https://github.com/heroku/node-js-getting-started.git
      * Delete existing files from the our own repo folder
      * copy node-js-getting-started	stuff to this folder (one level up)
    * Modify app.json & package.json files.
    * Run the project locally first
      > npm install (installs depencies)
      > npm start
    * Commit and push changes to git
    > git status
    > git add --all
    > git commit -m"Heroku skeleton"
    > git push origin master
    - As next we will configure the Heroku to use this git repo.
    > Go to Heroku web site.
    > Click configure new app
      > Set the name for the app & Europe region
      > Click Connect to github button and configure git repo details.
    - Describe the master branch selection here
    > Click deploy branch button. Also describe what deploy word means in this
      context.
    > Click view button, the project is now live!

    
